% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RPChoose.R
\name{RPChoose}
\alias{RPChoose}
\title{Chooses projection and produces predictions}
\usage{
RPChoose(
  XTrain,
  YTrain,
  XTest,
  d,
  B2 = 10,
  base = "LDA",
  k = c(3, 5),
  projmethod = "Haar",
  estmethod = "training",
  ...
)
}
\arguments{
\item{XTrain}{An n by p matrix containing the training data feature vectors.}

\item{YTrain}{A vector of length n of the classes (either 1 or 2) of the training data.}

\item{XTest}{An n.test by p matrix of the test data.}

\item{d}{The lower dimension of the image space of the projections.}

\item{B2}{The block size.}

\item{base}{The base classifier: one of "knn","LDA","QDA" or "other".}

\item{k}{The options for k if base is "knn".}

\item{projmethod}{Either "Haar", "Gaussian" or "axis".}

\item{estmethod}{Method for estimating the test errors to choose the projection: either training error "training" or leave-one-out "loo".}

\item{...}{Optional further arguments if base = "other".}
}
\value{
Returns a vector of length n + n.test: the first n entries are the estimated classes of the training set, the last n.test are the estimated classes of the test set.
}
\description{
Chooses a the best projection from a set of size B2 based on a test error estimate, then classifies the training and test sets using the chosen projection.
}
\details{
Randomly projects the the data B2 times. Chooses the projection yielding the smallest estimate of the test error. Classifies the training set (via the same method as estmethod) and test set using the chosen projection.
}
\note{
Resubstitution method unsuitable for the k-nearest neighbour classifier.
}
\examples{
set.seed(100)
Train <- RPModel(1, 50, 100, 0.5)
Test <- RPModel(1, 100, 100, 0.5)
Choose.out5 <- RPChoose(XTrain = Train$x, YTrain = Train$y, XTest = Test$x, 
                        d = 2, B2 = 5, base = "QDA", projmethod = "Haar", estmethod = "loo")
Choose.out10 <- RPChoose(XTrain = Train$x, YTrain = Train$y, XTest = Test$x, 
                         d = 2, B2 = 10, base = "QDA", projmethod = "Haar", estmethod = "loo")
sum(Choose.out5[1:50] != Train$y)
sum(Choose.out10[1:50] != Train$y)
sum(Choose.out5[51:150] != Test$y)
sum(Choose.out10[51:150] != Test$y)
}
