% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RPChooseSS.R
\name{RPChooseSSA}
\alias{RPChooseSSA}
\title{A sample splitting version of RPChooseA}
\usage{
RPChooseSSA(
  XTrain,
  YTrain,
  XVal,
  YVal,
  d,
  B2 = 100,
  base = "LDA",
  k = c(3, 5),
  projmethod = "Haar",
  ...
)
}
\arguments{
\item{XTrain}{An n by p matrix containing the training data feature vectors.}

\item{YTrain}{A vector of length n of the classes (either 1 or 2) of the training data.}

\item{XVal}{An n.val by p matrix containing the validation data feature vectors.}

\item{YVal}{A vector of length n.val of the classes (either 1 or 2) of the validation data.}

\item{d}{The lower dimension of the image space of the projections.}

\item{B2}{The block size.}

\item{base}{The base classifier one of "knn","LDA","QDA" or "other".}

\item{k}{The options for k if base = "knn".}

\item{projmethod}{Either "Haar", "Gaussian" or "axis".}

\item{...}{Optional further arguments if base = "other".}
}
\value{
Returns a vector of length n.val + n.test: the first n.val entries are the estimated classes of the validation set, the last n.test are the estimated classes of the test set.
}
\description{
Chooses the best projection based on an estimate of the test error of the classifier with training data (XTrain, YTrain), the estimation method counts the number of errors made on the validation set (XVal, YVal).
}
\details{
Maps the the data using B2 random projections. For each projection the validation set is classified using the the training set and the projection yielding the smallest number of errors over the validation set is retained. The validation set and test set are then classified using the chosen projection.
}
\examples{
set.seed(100)
Train <- RPModel(1, 50, 100, 0.5)
Validate <- RPModel(1, 50, 100, 0.5)
Choose <- RPChooseSS(XTrain = Train$x, YTrain = Train$y, XVal = Validate$x, 
  YVal = Validate$y, d = 2, B2 = 5, base = "QDA", projmethod = "Haar")
sum(Choose[1:50] != Validate$y)
}
\seealso{
RPParallel, RPChoose, lda, qda, knn
}
