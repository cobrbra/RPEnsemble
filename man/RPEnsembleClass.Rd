% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RPEnsembleClass.R
\name{RPEnsembleClass}
\alias{RPEnsembleClass}
\title{Classifies the test set using the random projection ensemble classifier}
\usage{
RPEnsembleClass(RP.out, n, n.val, n.test, p1, samplesplit = FALSE, alpha, ...)
}
\arguments{
\item{RP.out}{The result of a call to RPParallel.}

\item{n}{Training set sample size.}

\item{n.val}{Validation set sample size.}

\item{n.test}{Test set sample size.}

\item{p1}{Prior probability estimate.}

\item{samplesplit}{TRUE if using sample-splitting method.}

\item{alpha}{The voting threshold.}

\item{...}{Optional further arguments if base = "other".}
}
\value{
A vector of length n.test containing the class predictions of the test set (either 1 or 2).
}
\description{
Performs a biased majority vote over B1 base classifications to assign the test set.
}
\details{
An observation in the test set is assigned to class 1 if B1*alpha or more of the base classifications are class 1 (otherwise class 2).
}
\examples{
Train <- RPModel(1, 50, 100, 0.5)
Test <- RPModel(1, 100, 100, 0.5)
Out <- RPParallel(XTrain = Train$x, YTrain = Train$y, XTest = Test$x, 
d = 2, B1 = 50, B2 = 10, base = "LDA", projmethod = "Haar", 
estmethod = "training", clustertype = "Default")
Class <- RPEnsembleClass(RP.out = Out, n = length(Train$y), 
n.test = nrow(Test$x), p1 = sum(Train$y == 1)/length(Train$y),  
splitsample = FALSE,  alpha = RPalpha(Out, Y = Train$y, 
p1 = sum(Train$y == 1)/length(Train$y)))
mean(Class != Test$y)
}
\seealso{
RPParallel, RPalpha, RPChoose
}
