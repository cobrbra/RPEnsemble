% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RPReduce.R
\name{RPReduceA}
\alias{RPReduceA}
\title{Produce low-dimensional representations of a dataset}
\usage{
RPReduceA(
  XTrain,
  YTrain,
  XTest,
  YTest = NULL,
  reduced_dim = 2,
  d,
  B1 = 100,
  B2 = 10,
  base = "LDA",
  projmethod = "Haar",
  estmethod = "training",
  decomposition = NULL
)
}
\arguments{
\item{XTrain}{An n by p matrix containing the training data feature vectors.}

\item{YTrain}{A vector of length n of the classes (either 1 or 2) of the training data.}

\item{XTest}{An n.test by p matrix containing the test data feature vectors.}

\item{YTest}{A vector of length n.test of the classes (either 1 or 2) of the test data.}

\item{reduced_dim}{The dimensionality of reduced data to produce.}

\item{d}{The lower dimension of the image space of the projections.}

\item{B1}{The number of blocks.}

\item{B2}{The size of each block.}

\item{base}{The base classifier one of "knn","LDA","QDA" or "other".}

\item{projmethod}{Either "Haar", "Gaussian" or "axis".}

\item{estmethod}{Method for estimating the test errors to choose the projection: either training error "training", leave-one-out "loo", or sample split "samplesplit".}

\item{decomposition}{(optional) the result of a call to RPDecomposeA().}
}
\value{
A list with two elements, XTest_r and YTest. XTest_r is an n.test by reduced_dim sized matrix containing reduced data representations. YTest is whatever has been provided.
}
\description{
Implements the full supervised dimensionality reduction workflow, by generating then selecting matrices, decomposing the resultant concatenated matrix and then projecting onto a given sized space.
}
\examples{
set.seed(100)
Train <- RPModel(1, 50, 100, 0.5)
Test <- RPModel(1, 50, 100, 0.5)
Rep <- RPReduceA(XTrain = Train$x, YTrain = Train$y, XTest = Test$x, reduced_dim = 2, d = 3, 
B1 = 10, B2 = 5, base = "QDA", projmethod = "Haar", estmethod = "loo")
}
